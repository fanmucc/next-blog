import request from "@/utils/axios";
import { useEffect } from "react";

import Head from "next/head";
import Layout from "@/Layout";
import type { NextApiRequest, NextApiResponse } from "next";
import type { AppProps } from "next/app";
import MarkdownIt from "@/utils/markdowIt";

import List from "../components/List";
import Author from "@/components/Author";

interface Iprops extends AppProps {
	markdown: string;
}

import classNames from "classnames";
import styles from "@/styles/index.module.scss";

export default function Home(props: Iprops) {
	useEffect(() => {
		request({
			url: "/api/mock/hello",
			method: "get",
		})
			.then((res) => {
				console.log(res);
			})
			.catch((err) => {
				console.log(err);
			});
	}, []);

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta name='description' content='Generated by create next app' />
				<meta name='viewport' content='width=device-width, initial-scale=1' />
				<link rel='icon' href='/favicon.ico' />
				<style>
					{`
            :root {
              // --blog-main: red !important;
            }
          `}
				</style>
			</Head>
			<Layout title='严凡木 - 分享设计与科技生活'>
				<div className={classNames(styles["index"], "slide-box")}>
					<div className={classNames(styles["index-right"])}>
						<List.ListTwo />
						<List.ListTwo />
						<List.ListTwo />
					</div>
					<div>
						<Author />
					</div>
				</div>
			</Layout>
		</>
	);
}

export async function getServerSideProps({
	req,
	res,
}: {
	req: NextApiRequest;
	res: NextApiResponse;
}) {
	console.log(req?.query, "控制台输出");

	// const a = request({
	// 	url: "/api/mock/hello",
	// 	method: "get",
	// })
	// 	.then((res) => {
	// 		console.log(res);
	// 	})
	// 	.catch((err) => {
	// 		console.log(err);
	// 	});
	// fetch(`/api/hello`)
	// 	.then((response) => response.json())
	// 	.then((data) => {
	// 		console.log(data);
	// 	})
	// 	.catch((error) => console.error(error));

	res.setHeader(
		"Cache-Control",
		"public, s-maxage=10, stale-while-revalidate=59"
	);
	return {
		props: {
			headerMenus: [
				{
					lable: "测试",
					id: 1,
				},
			],
		},
	};
}
